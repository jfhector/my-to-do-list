.todo-list > h1 {
    margin: 0;
    margin-bottom: -1rem;
}

.todo-list > .stack > ul {
    list-style: none;
    padding-left: 0;
    display: flex;
    flex-direction: column;
}

.todo-list__empty-state-panel {
    display: none;
}

.todo-list > .stack > ul:empty + .todo-list__empty-state-panel {
    display: block;
    padding: 0.5rem;
    border: 0.25rem solid black;
    border-radius: 0.25rem;
    max-width: max-content;
}

.todo-list__item {
    display: flex;
    align-items: center;
    min-height: 4rem;
    padding: 0.5rem 0.25rem;
    border-bottom: 1px solid black;
    /* Note: for a transition to apply both way, it needs to be in a ruleset that still applies after the event */
    /* transition: background-color 50ms ease-out; */
    will-change: transform;
}

.todo-list__item:focus-within {
    background-color: var(--focus-background-color);
}

.todo-list__item > span[id$="-label"] {
    padding: 0.125rem;
    min-width: 4rem;
    margin-left: 0.5rem;
    margin-right: auto;
    border-radius: 0.125rem;
    position: relative;
}
/* This is to extend the click/touch area for the contenteditable span. Pseudo elements capture clicks/touches for their parent*/
.todo-list__item > span[id$="-label"]::before {
    content: '';
    position: absolute;
    top: -1rem;
    bottom: -1rem;
    left: 0;
    right: 0;
}

.todo-list__item > span[id$="-label"]:focus {
    outline: 0.125rem solid transparent;
    box-shadow: 0 0 0 0.125rem var(--focus-outline-color);
}

.todo-list__item > input[type="checkbox"]:checked + span[id$="-label"] {
    text-decoration: line-through;
}

.js-todo-delete-button {
    transition: opacity 300ms ease-in-out;
}

/* 
* If an element has visibility hidden, it can't be clicked/touched on by humans.
* Beware that an element with opacity 0 can still be touched/clicked.
* I've chosen not to use `visibility: hidden;` because if I do, the button is taken out of the tab order.
* Instead, I just use opacity, but the opacity never again reduced if any touch event has been detected on the app, ever, in a browser. (It's stored in localStorage)
*/
.todo-list.allow-hiden-buttons .todo-list__item:not(:hover):not(:focus-within) > .js-todo-delete-button {
    opacity: 0;
}

.todo-list__item > button > img {
    height: 1.5rem;
}

.add-item {
    will-change: transform;
}

.todo-list__secondary-buttons {
    margin: -0.5rem;
    display: flex;
    flex-wrap: wrap;
    max-width: calc(44ch + 0.5rem);
    will-change: transform;
}

.todo-list__secondary-buttons > * {
    margin: 0.5rem;
    flex-grow: 1;
    flex-basis: auto;
}
